"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[locale]/page",{

/***/ "(app-pages-browser)/./context/FlightServiceContext.jsx":
/*!******************************************!*\
  !*** ./context/FlightServiceContext.jsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FlightServiceProvider: function() { return /* binding */ FlightServiceProvider; },\n/* harmony export */   buildDate: function() { return /* binding */ buildDate; },\n/* harmony export */   useFlightService: function() { return /* binding */ useFlightService; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _context_NotificationContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/context/NotificationContext */ \"(app-pages-browser)/./context/NotificationContext.jsx\");\n/* harmony import */ var _utils_flySearchErrors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/utils/flySearchErrors */ \"(app-pages-browser)/./utils/flySearchErrors.js\");\n/* harmony import */ var react_multi_date_picker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-multi-date-picker */ \"(app-pages-browser)/./node_modules/react-multi-date-picker/build/index.js\");\n/* __next_internal_client_entry_do_not_use__ buildDate,FlightServiceProvider,useFlightService auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\nconst FlightServiceContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst buildDate = (date)=>\"\".concat(date.day, \".\").concat(date.month, \".\").concat(date.year);\nfunction getLastDayOfPreviousMonthWithYear(dateString) {\n    const [day, month, year] = dateString.split(\".\");\n    const date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n    date.setDate(0);\n    const lastDay = date.getDate();\n    const lastMonth = date.getMonth() + 1;\n    let lastYear = date.getFullYear();\n    return \"\".concat(lastDay, \".\").concat(lastMonth, \".\").concat(lastYear + 1);\n}\nconst FlightServiceProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const { showFlyErrorNotification } = (0,_context_NotificationContext__WEBPACK_IMPORTED_MODULE_3__.useNotification)();\n    const [flightData, setFlightData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [departure, setDeparture] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(undefined);\n    const [destination, setDestination] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(undefined);\n    const [availableDestinations, setAvailableDestination] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loadingFlightData, setLoadingFlightData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [loadingDestination, setLoadingDestination] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [loadingSearch, setloadingSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const today = new react_multi_date_picker__WEBPACK_IMPORTED_MODULE_5__.DateObject();\n    const fetchFlightData = async ()=>{\n        try {\n            setLoadingFlightData(true);\n            const response = await fetch(\"\".concat(\"https://hla-stage.crane.aero/ibe/\", \"search/portGroups\"));\n            const data = await response.json();\n            let idCounter = 1;\n            const flightsData = Object.entries(data).flatMap((param)=>{\n                let [country, cities] = param;\n                return cities.map((param)=>{\n                    let { cityName, code } = param;\n                    return {\n                        id: idCounter++,\n                        name: cityName,\n                        code\n                    };\n                });\n            });\n            setFlightData(flightsData);\n            setLoadingFlightData(false);\n        } catch (error) {\n            console.error(\"Error fetching flight data:\", error);\n            setLoadingFlightData(false);\n        }\n    };\n    const fetchDestinationFrom = async ()=>{\n        try {\n            setLoadingDestination(true);\n            const response = await fetch(\"\".concat(\"https://hla-stage.crane.aero/ibe/\", \"search/portGroupsByCountry/\").concat(departure.code));\n            const data = await response.json();\n            const transformData = (data)=>{\n                let flightsData = [];\n                let id = 1;\n                data.forEach((countryData)=>{\n                    for(let countryName in countryData){\n                        countryData[countryName].forEach((city)=>{\n                            flightsData.push({\n                                id: id++,\n                                name: city.cityName,\n                                code: city.code\n                            });\n                        });\n                    }\n                });\n                return flightsData;\n            };\n            setAvailableDestination(transformData(data));\n            setLoadingDestination(false);\n        } catch (error) {\n            console.error(\"Error fetching destination data:\", error);\n            setLoadingDestination(false);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchFlightData();\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (departure && departure.code) fetchDestinationFrom();\n    }, [\n        departure\n    ]);\n    const getFlightData = ()=>{\n        return flightData;\n    };\n    const setDepartureLocation = (location)=>{\n        setDeparture(location);\n    };\n    const setDestinationLocation = (location)=>{\n        setDestination(location);\n    };\n    const searchFlights = async (flyingFrom, flyingTo, departDate, returnDate, guestCounts)=>{\n        setloadingSearch(true);\n        try {\n            const flyErrors = (0,_utils_flySearchErrors__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(flyingFrom, flyingTo, departDate, returnDate, today);\n            if (flyErrors.hasErrors) {\n                Object.entries(flyErrors.errors).forEach((param)=>{\n                    let [key, value] = param;\n                    if (value) {\n                        switch(key){\n                            case \"flyingFrom\":\n                                showFlyErrorNotification(\"fly-complete-search:flyingFrom\");\n                                setloadingSearch(false);\n                                break;\n                            case \"flyingTo\":\n                                showFlyErrorNotification(\"fly-complete-search:flyingTo\");\n                                setloadingSearch(false);\n                                break;\n                            case \"returnBeforeDepart\":\n                                showFlyErrorNotification(\"fly-complete-search:returnBeforeDepart\");\n                                setloadingSearch(false);\n                                break;\n                            case \"equalLocations\":\n                                showFlyErrorNotification(\"fly-complete-search:equalLocations\");\n                                setloadingSearch(false);\n                                break;\n                            case \"departDatePast\":\n                                showFlyErrorNotification(\"fly-complete-search:departDatePast\");\n                                setloadingSearch(false);\n                                break;\n                            case \"returnDatePast\":\n                                showFlyErrorNotification(\"fly-complete-search:returnDatePast\");\n                                setloadingSearch(false);\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                });\n                return;\n            }\n            const routeSearch = \"\".concat(\"https://hla-stage.crane.aero/ibe/\", \"availability?tripType=ROUND_TRIP&depPort=\").concat(flyingFrom, \"&arrPort=\").concat(flyingTo, \"&departureDate=\").concat(buildDate(departDate), \"&returnDate=\").concat(buildDate(returnDate), \"&adult=\").concat(guestCounts.adult, \"&child=\").concat(guestCounts.child, \"&infant=\").concat(guestCounts.infant, \"&cabinClas=ECONOMY&currency=USD&language=EN\");\n            router.push(routeSearch);\n        } catch (error) {\n            console.error(\"Error searching flights:\", error);\n            setloadingSearch(false);\n        }\n    };\n    const getAvailableFlightDates = async (depCode, desCode)=>{\n        try {\n            var _data_availableDates;\n            const response = await fetch(\"\".concat(\"https://hla-stage.crane.aero/ibe/\", \"search/availableFlightDates?depPort=\").concat(depCode, \"&arrPort=\").concat(desCode, \"&startDate=\").concat(buildDate(today), \"&endDate=\").concat(getLastDayOfPreviousMonthWithYear(buildDate(today))));\n            const data = await response.json();\n            console.log(getLastDayOfPreviousMonthWithYear(buildDate(today)));\n            const dateObjectsArray = (_data_availableDates = data.availableDates) === null || _data_availableDates === void 0 ? void 0 : _data_availableDates.map((dateString)=>{\n                const [day, month, year] = dateString.split(\".\"); // Dividimos la cadena de texto en día, mes y año\n                return new react_multi_date_picker__WEBPACK_IMPORTED_MODULE_5__.DateObject({\n                    year: parseInt(year),\n                    month: parseInt(month),\n                    day: parseInt(day)\n                });\n            });\n            return dateObjectsArray;\n        } catch (error) {\n            console.error(\"Error fetching available flight dates data:\", error);\n        }\n    };\n    const values = {\n        availableDestinations,\n        setDepartureLocation,\n        getFlightData,\n        departure,\n        loadingDestination,\n        loadingFlightData,\n        searchFlights,\n        loadingSearch,\n        getAvailableFlightDates,\n        destination,\n        setDestinationLocation\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(FlightServiceContext.Provider, {\n        value: values,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/frmachado/savia/holiday/context/FlightServiceContext.jsx\",\n        lineNumber: 223,\n        columnNumber: 5\n    }, undefined);\n};\n_s(FlightServiceProvider, \"A8SNst9WDmmW77vB/LDumLW+XCY=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter,\n        _context_NotificationContext__WEBPACK_IMPORTED_MODULE_3__.useNotification\n    ];\n});\n_c = FlightServiceProvider;\nconst useFlightService = ()=>{\n    _s1();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(FlightServiceContext);\n};\n_s1(useFlightService, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"FlightServiceProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./context/FlightServiceContext.jsx\n"));

/***/ })

});