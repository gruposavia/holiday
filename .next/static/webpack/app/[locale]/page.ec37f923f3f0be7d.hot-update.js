"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[locale]/page",{

/***/ "(app-pages-browser)/./features/hero/findPlaceSlice.js":
/*!*****************************************!*\
  !*** ./features/hero/findPlaceSlice.js ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addCurrentTab: function() { return /* binding */ addCurrentTab; },\n/* harmony export */   findPlaceSlice: function() { return /* binding */ findPlaceSlice; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n\nconst initialState = {\n    tabs: [\n        {\n            id: 1,\n            name: \"flights\",\n            icon: \"icon-tickets\"\n        },\n        {\n            id: 2,\n            name: \"Manage Booking\",\n            icon: \"icon-bed\"\n        },\n        {\n            id: 3,\n            name: \"Check-in\",\n            icon: \"icon-destination\"\n        },\n        {\n            id: 4,\n            name: \"Flight Status\",\n            icon: \"icon-ski\"\n        }\n    ],\n    currentTab: \"Flights\"\n};\nconst findPlaceSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"find-place\",\n    initialState,\n    reducers: {\n        addCurrentTab: (state, param)=>{\n            let { payload } = param;\n            state.currentTab = payload;\n        }\n    }\n});\nconst { addCurrentTab } = findPlaceSlice.actions;\n/* harmony default export */ __webpack_exports__[\"default\"] = (findPlaceSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ZlYXR1cmVzL2hlcm8vZmluZFBsYWNlU2xpY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStDO0FBRS9DLE1BQU1DLGVBQWU7SUFDbkJDLE1BQU07UUFFSjtZQUFFQyxJQUFJO1lBQUdDLE1BQU07WUFBV0MsTUFBTTtRQUFlO1FBQy9DO1lBQUVGLElBQUk7WUFBR0MsTUFBTTtZQUFrQkMsTUFBTTtRQUFXO1FBQ2xEO1lBQUVGLElBQUk7WUFBR0MsTUFBTTtZQUFZQyxNQUFNO1FBQW1CO1FBQ3BEO1lBQUVGLElBQUk7WUFBR0MsTUFBTTtZQUFpQkMsTUFBTTtRQUFXO0tBQ2xEO0lBQ0RDLFlBQVk7QUFDZDtBQUVPLE1BQU1DLGlCQUFpQlAsNkRBQVdBLENBQUM7SUFDeENJLE1BQU07SUFDTkg7SUFDQU8sVUFBVTtRQUNSQyxlQUFlLENBQUNDO2dCQUFPLEVBQUVDLE9BQU8sRUFBRTtZQUNoQ0QsTUFBTUosVUFBVSxHQUFHSztRQUNyQjtJQUNGO0FBQ0YsR0FBRztBQUVJLE1BQU0sRUFBRUYsYUFBYSxFQUFFLEdBQUdGLGVBQWVLLE9BQU8sQ0FBQztBQUN4RCwrREFBZUwsZUFBZU0sT0FBTyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ZlYXR1cmVzL2hlcm8vZmluZFBsYWNlU2xpY2UuanM/NGQwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTbGljZSB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0XCI7XG5cbmNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgdGFiczogW1xuXG4gICAgeyBpZDogMSwgbmFtZTogXCJmbGlnaHRzXCIsIGljb246IFwiaWNvbi10aWNrZXRzXCIgfSxcbiAgICB7IGlkOiAyLCBuYW1lOiBcIk1hbmFnZSBCb29raW5nXCIsIGljb246IFwiaWNvbi1iZWRcIiB9LFxuICAgIHsgaWQ6IDMsIG5hbWU6IFwiQ2hlY2staW5cIiwgaWNvbjogXCJpY29uLWRlc3RpbmF0aW9uXCIgfSxcbiAgICB7IGlkOiA0LCBuYW1lOiBcIkZsaWdodCBTdGF0dXNcIiwgaWNvbjogXCJpY29uLXNraVwiIH0sXG4gIF0sXG4gIGN1cnJlbnRUYWI6IFwiRmxpZ2h0c1wiLFxufTtcblxuZXhwb3J0IGNvbnN0IGZpbmRQbGFjZVNsaWNlID0gY3JlYXRlU2xpY2Uoe1xuICBuYW1lOiBcImZpbmQtcGxhY2VcIixcbiAgaW5pdGlhbFN0YXRlLFxuICByZWR1Y2Vyczoge1xuICAgIGFkZEN1cnJlbnRUYWI6IChzdGF0ZSwgeyBwYXlsb2FkIH0pID0+IHtcbiAgICAgIHN0YXRlLmN1cnJlbnRUYWIgPSBwYXlsb2FkO1xuICAgIH0sXG4gIH0sXG59KTtcblxuZXhwb3J0IGNvbnN0IHsgYWRkQ3VycmVudFRhYiB9ID0gZmluZFBsYWNlU2xpY2UuYWN0aW9ucztcbmV4cG9ydCBkZWZhdWx0IGZpbmRQbGFjZVNsaWNlLnJlZHVjZXI7XG4iXSwibmFtZXMiOlsiY3JlYXRlU2xpY2UiLCJpbml0aWFsU3RhdGUiLCJ0YWJzIiwiaWQiLCJuYW1lIiwiaWNvbiIsImN1cnJlbnRUYWIiLCJmaW5kUGxhY2VTbGljZSIsInJlZHVjZXJzIiwiYWRkQ3VycmVudFRhYiIsInN0YXRlIiwicGF5bG9hZCIsImFjdGlvbnMiLCJyZWR1Y2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./features/hero/findPlaceSlice.js\n"));

/***/ })

});